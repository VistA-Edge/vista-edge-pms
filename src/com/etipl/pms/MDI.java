/* ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;
; Copyright © 2009 Edgeware Technologies (India) Pvt Ltd ;
; ;
; This source code contains the intellectual property ;
; of its copyright holder(s), and is made available ;
; under a license. If you do not know the terms of ;
; the license, please stop and do not read further. ;
; ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*/

package com.etipl.pms;
import com.etipl.pms.reports.AZSlidingFee.AZReport;
import com.etipl.pms.reports.Receipt.Receipt;
import com.etipl.pms.reports.unposted.Unposted;
import java.awt.Dimension;
import java.awt.Toolkit;
import com.etipl.pms.utilities.*;
import java.sql.Connection;

public class MDI extends javax.swing.JFrame {
    
    public static Connection global_con = null;
    public static DBConnection db1;

    //Default close for child windows
    public static int defaultWindowClose=2;

    public static UserManagement userManagement;
    public static UserPreference userPreference;
    public static DoctorMaster docMaster;
    public static Facility serFacility;
    public static InsuranceCompanyMaster insMaster;
    public static CPT_ICD_LINK cpticdLink;
    public static ChargeCodeMaster chargeCodeMaster;
    public static PatientRegistation patRegistration;
    public static BasicAppointment basicAppointment;
    public static Case patientCase;
    public static Billing billing;
    public static PaymentPosting paymentPosting;
    public static AZReport azSlidingReport;
    public static Unposted unpostedReport;
    public static Receipt receiptReport;
    public static PatientList patientList;
    public static PaymentDepositList paymentDepList;
    public static SearchCriteria searchCriteria;
    public static AboutFrame aboutFrame;

    

    /** Creates new form MDI */
    public MDI() {
        initComponents();

        db1=new DBConnection();
        global_con=db1.getPMSConnection();

        butAZSliding.setVisible(false);
        menuItemAZSliding.setVisible(false);
        butUserManagement.setVisible(false);

       this.setTitle("VistA-Edge™ Practice Management System - Login as: "+LoginScreen.user);

        setExtendedState(MAXIMIZED_BOTH);
        screenDisplay();     
    }



    private void screenDisplay(){
    Dimension frameDimension = getSize();

	// position the topFrame
	Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

	if (frameDimension.height > screenSize.height)
        {
		frameDimension.height = screenSize.height;
	}

        if (frameDimension.width > screenSize.width)
        {
			frameDimension.width = screenSize.width;
	}

	setLocation((screenSize.width - frameDimension.width) / 2,
				(screenSize.height - frameDimension.height) / 2);
        
    }
    /** This method is called from within the constructor to
     * initialize the form. 
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        butUserManagement = new javax.swing.JButton();
        butProvider = new javax.swing.JButton();
        butFacility = new javax.swing.JButton();
        butInsurance = new javax.swing.JButton();
        butCPTICDlink = new javax.swing.JButton();
        butChargeCode = new javax.swing.JButton();
        butRegistration = new javax.swing.JButton();
        butAppointment = new javax.swing.JButton();
        butCase = new javax.swing.JButton();
        butBilling = new javax.swing.JButton();
        butPayment = new javax.swing.JButton();
        butAZSliding = new javax.swing.JButton();
        butUnposted = new javax.swing.JButton();
        butReceipt = new javax.swing.JButton();
        butHelp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        menuItemUserManagement = new javax.swing.JMenuItem();
        menuItemExit = new javax.swing.JMenuItem();
        mastersMenu = new javax.swing.JMenu();
        menuItemProvider = new javax.swing.JMenuItem();
        menuItemFacility = new javax.swing.JMenuItem();
        menuItemInsCompany = new javax.swing.JMenuItem();
        menuItemCPTICDLink = new javax.swing.JMenuItem();
        menuItemChargeCode = new javax.swing.JMenuItem();
        transactionsMenu = new javax.swing.JMenu();
        menuItemRegistration = new javax.swing.JMenuItem();
        menuItemAppointment = new javax.swing.JMenuItem();
        menuItemCase = new javax.swing.JMenuItem();
        menuItemBilling = new javax.swing.JMenuItem();
        menuItemPayment = new javax.swing.JMenuItem();
        reportsMenu = new javax.swing.JMenu();
        menuItemAZSliding = new javax.swing.JMenuItem();
        MenuDetailReceiptReport = new javax.swing.JMenu();
        menuItemReceiptReport = new javax.swing.JMenuItem();
        menuItemUnpostedReport = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        menuItemContents = new javax.swing.JMenuItem();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jToolBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);
        jToolBar1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jToolBar1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        butUserManagement.setFont(new java.awt.Font("Tahoma", 0, 9));
        butUserManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/p.jpg"))); // NOI18N
        butUserManagement.setText("User Management");
        butUserManagement.setFocusable(false);
        butUserManagement.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butUserManagement.setIconTextGap(0);
        butUserManagement.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butUserManagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUserManagementActionPerformed(evt);
            }
        });
        jToolBar1.add(butUserManagement);

        butProvider.setFont(new java.awt.Font("Tahoma", 0, 9));
        butProvider.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/do.jpg"))); // NOI18N
        butProvider.setText("Provider");
        butProvider.setFocusable(false);
        butProvider.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butProvider.setIconTextGap(0);
        butProvider.setMaximumSize(new java.awt.Dimension(80, 41));
        butProvider.setMinimumSize(new java.awt.Dimension(80, 37));
        butProvider.setPreferredSize(new java.awt.Dimension(80, 41));
        butProvider.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butProviderActionPerformed(evt);
            }
        });
        jToolBar1.add(butProvider);

        butFacility.setFont(new java.awt.Font("Tahoma", 0, 9));
        butFacility.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/pp.jpg"))); // NOI18N
        butFacility.setText("Facility");
        butFacility.setFocusable(false);
        butFacility.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butFacility.setIconTextGap(0);
        butFacility.setMaximumSize(new java.awt.Dimension(75, 41));
        butFacility.setMinimumSize(new java.awt.Dimension(75, 37));
        butFacility.setPreferredSize(new java.awt.Dimension(75, 41));
        butFacility.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butFacility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butFacilityActionPerformed(evt);
            }
        });
        jToolBar1.add(butFacility);

        butInsurance.setFont(new java.awt.Font("Tahoma", 0, 9));
        butInsurance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/p.jpg"))); // NOI18N
        butInsurance.setText("Insurance");
        butInsurance.setFocusable(false);
        butInsurance.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butInsurance.setIconTextGap(0);
        butInsurance.setMaximumSize(new java.awt.Dimension(75, 41));
        butInsurance.setMinimumSize(new java.awt.Dimension(75, 37));
        butInsurance.setPreferredSize(new java.awt.Dimension(75, 41));
        butInsurance.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butInsurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butInsuranceActionPerformed(evt);
            }
        });
        jToolBar1.add(butInsurance);

        butCPTICDlink.setFont(new java.awt.Font("Tahoma", 0, 9));
        butCPTICDlink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/appt.jpg"))); // NOI18N
        butCPTICDlink.setText("CPT-ICD");
        butCPTICDlink.setFocusable(false);
        butCPTICDlink.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butCPTICDlink.setIconTextGap(0);
        butCPTICDlink.setMaximumSize(new java.awt.Dimension(75, 41));
        butCPTICDlink.setMinimumSize(new java.awt.Dimension(75, 37));
        butCPTICDlink.setPreferredSize(new java.awt.Dimension(75, 41));
        butCPTICDlink.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butCPTICDlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCPTICDlinkActionPerformed(evt);
            }
        });
        jToolBar1.add(butCPTICDlink);

        butChargeCode.setFont(new java.awt.Font("Tahoma", 0, 9));
        butChargeCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/hc.jpg"))); // NOI18N
        butChargeCode.setText("Chargecode");
        butChargeCode.setFocusable(false);
        butChargeCode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butChargeCode.setIconTextGap(0);
        butChargeCode.setMaximumSize(new java.awt.Dimension(75, 41));
        butChargeCode.setMinimumSize(new java.awt.Dimension(75, 37));
        butChargeCode.setPreferredSize(new java.awt.Dimension(75, 41));
        butChargeCode.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butChargeCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butChargeCodeActionPerformed(evt);
            }
        });
        jToolBar1.add(butChargeCode);

        butRegistration.setFont(new java.awt.Font("Tahoma", 0, 9));
        butRegistration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/pr.jpg"))); // NOI18N
        butRegistration.setText("Registration");
        butRegistration.setFocusable(false);
        butRegistration.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butRegistration.setIconTextGap(0);
        butRegistration.setMaximumSize(new java.awt.Dimension(75, 41));
        butRegistration.setMinimumSize(new java.awt.Dimension(75, 41));
        butRegistration.setPreferredSize(new java.awt.Dimension(75, 41));
        butRegistration.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRegistrationActionPerformed(evt);
            }
        });
        jToolBar1.add(butRegistration);

        butAppointment.setFont(new java.awt.Font("Tahoma", 0, 9));
        butAppointment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/ap.jpg"))); // NOI18N
        butAppointment.setText("Appointment");
        butAppointment.setFocusable(false);
        butAppointment.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butAppointment.setIconTextGap(0);
        butAppointment.setMaximumSize(new java.awt.Dimension(80, 41));
        butAppointment.setMinimumSize(new java.awt.Dimension(80, 37));
        butAppointment.setPreferredSize(new java.awt.Dimension(80, 37));
        butAppointment.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAppointmentActionPerformed(evt);
            }
        });
        jToolBar1.add(butAppointment);

        butCase.setFont(new java.awt.Font("Tahoma", 0, 9));
        butCase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/case.jpg"))); // NOI18N
        butCase.setText("Pre Claim Info");
        butCase.setFocusable(false);
        butCase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butCase.setIconTextGap(0);
        butCase.setMaximumSize(new java.awt.Dimension(80, 41));
        butCase.setMinimumSize(new java.awt.Dimension(80, 41));
        butCase.setPreferredSize(new java.awt.Dimension(80, 41));
        butCase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCaseActionPerformed(evt);
            }
        });
        jToolBar1.add(butCase);

        butBilling.setFont(new java.awt.Font("Tahoma", 0, 9));
        butBilling.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/bill.jpg"))); // NOI18N
        butBilling.setText("Generate Claim");
        butBilling.setFocusable(false);
        butBilling.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butBilling.setIconTextGap(0);
        butBilling.setMaximumSize(new java.awt.Dimension(88, 41));
        butBilling.setMinimumSize(new java.awt.Dimension(88, 41));
        butBilling.setPreferredSize(new java.awt.Dimension(88, 41));
        butBilling.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBillingActionPerformed(evt);
            }
        });
        jToolBar1.add(butBilling);

        butPayment.setFont(new java.awt.Font("Tahoma", 0, 9));
        butPayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/pp1.jpg"))); // NOI18N
        butPayment.setText("Payment");
        butPayment.setFocusable(false);
        butPayment.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butPayment.setIconTextGap(0);
        butPayment.setMaximumSize(new java.awt.Dimension(75, 41));
        butPayment.setMinimumSize(new java.awt.Dimension(75, 41));
        butPayment.setPreferredSize(new java.awt.Dimension(75, 41));
        butPayment.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPaymentActionPerformed(evt);
            }
        });
        jToolBar1.add(butPayment);

        butAZSliding.setFont(new java.awt.Font("Tahoma", 0, 9));
        butAZSliding.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/s.jpg"))); // NOI18N
        butAZSliding.setText("AZSliding");
        butAZSliding.setFocusable(false);
        butAZSliding.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butAZSliding.setIconTextGap(0);
        butAZSliding.setMaximumSize(new java.awt.Dimension(64, 71));
        butAZSliding.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butAZSliding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAZSlidingActionPerformed(evt);
            }
        });
        jToolBar1.add(butAZSliding);

        butUnposted.setFont(new java.awt.Font("Tahoma", 0, 9));
        butUnposted.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/ic.jpg"))); // NOI18N
        butUnposted.setText("Unposted");
        butUnposted.setFocusable(false);
        butUnposted.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butUnposted.setIconTextGap(0);
        butUnposted.setMaximumSize(new java.awt.Dimension(75, 71));
        butUnposted.setMinimumSize(new java.awt.Dimension(75, 37));
        butUnposted.setPreferredSize(new java.awt.Dimension(75, 37));
        butUnposted.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butUnposted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUnpostedActionPerformed(evt);
            }
        });
        jToolBar1.add(butUnposted);

        butReceipt.setFont(new java.awt.Font("Tahoma", 0, 9));
        butReceipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/pp.jpg"))); // NOI18N
        butReceipt.setText("Receipt");
        butReceipt.setFocusable(false);
        butReceipt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butReceipt.setIconTextGap(0);
        butReceipt.setMaximumSize(new java.awt.Dimension(75, 71));
        butReceipt.setMinimumSize(new java.awt.Dimension(75, 37));
        butReceipt.setPreferredSize(new java.awt.Dimension(75, 37));
        butReceipt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butReceiptActionPerformed(evt);
            }
        });
        jToolBar1.add(butReceipt);

        butHelp.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        butHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/help.jpg"))); // NOI18N
        butHelp.setText("Help");
        butHelp.setFocusable(false);
        butHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        butHelp.setIconTextGap(0);
        butHelp.setMaximumSize(new java.awt.Dimension(80, 71));
        butHelp.setMinimumSize(new java.awt.Dimension(80, 37));
        butHelp.setPreferredSize(new java.awt.Dimension(80, 37));
        butHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        butHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butHelpActionPerformed(evt);
            }
        });
        jToolBar1.add(butHelp);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/etipl/pms/images/etiplscreen.jpg"))); // NOI18N

        fileMenu.setMnemonic('F');
        fileMenu.setText("File");

        menuItemUserManagement.setText("User Management");
        menuItemUserManagement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUserManagementActionPerformed(evt);
            }
        });
        fileMenu.add(menuItemUserManagement);

        menuItemExit.setMnemonic('x');
        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        fileMenu.add(menuItemExit);

        mainMenuBar.add(fileMenu);

        mastersMenu.setMnemonic('M');
        mastersMenu.setText("Master");

        menuItemProvider.setMnemonic('P');
        menuItemProvider.setText("Provider");
        menuItemProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemProviderActionPerformed(evt);
            }
        });
        mastersMenu.add(menuItemProvider);

        menuItemFacility.setMnemonic('F');
        menuItemFacility.setText("Facility");
        menuItemFacility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemFacilityActionPerformed(evt);
            }
        });
        mastersMenu.add(menuItemFacility);

        menuItemInsCompany.setMnemonic('I');
        menuItemInsCompany.setText("Insurance Company");
        menuItemInsCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemInsCompanyActionPerformed(evt);
            }
        });
        mastersMenu.add(menuItemInsCompany);

        menuItemCPTICDLink.setText("CPT-ICD-Link");
        menuItemCPTICDLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCPTICDLinkActionPerformed(evt);
            }
        });
        mastersMenu.add(menuItemCPTICDLink);

        menuItemChargeCode.setMnemonic('C');
        menuItemChargeCode.setText("Charge Codes");
        menuItemChargeCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemChargeCodeActionPerformed(evt);
            }
        });
        mastersMenu.add(menuItemChargeCode);

        mainMenuBar.add(mastersMenu);

        transactionsMenu.setMnemonic('T');
        transactionsMenu.setText("Transaction");

        menuItemRegistration.setMnemonic('R');
        menuItemRegistration.setText("Patient Registration");
        menuItemRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRegistrationActionPerformed(evt);
            }
        });
        transactionsMenu.add(menuItemRegistration);

        menuItemAppointment.setMnemonic('A');
        menuItemAppointment.setText("Appointment");
        menuItemAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAppointmentActionPerformed(evt);
            }
        });
        transactionsMenu.add(menuItemAppointment);

        menuItemCase.setMnemonic('C');
        menuItemCase.setText("Pre claim Info");
        menuItemCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCaseActionPerformed(evt);
            }
        });
        transactionsMenu.add(menuItemCase);

        menuItemBilling.setMnemonic('B');
        menuItemBilling.setText("Generate Claim");
        menuItemBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemBillingActionPerformed(evt);
            }
        });
        transactionsMenu.add(menuItemBilling);

        menuItemPayment.setText("Payment Posting");
        menuItemPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPaymentActionPerformed(evt);
            }
        });
        transactionsMenu.add(menuItemPayment);

        mainMenuBar.add(transactionsMenu);
        transactionsMenu.getAccessibleContext().setAccessibleParent(transactionsMenu);

        reportsMenu.setMnemonic('R');
        reportsMenu.setText("Reports");

        menuItemAZSliding.setText("AZ SlidingFee Report");
        menuItemAZSliding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAZSlidingActionPerformed(evt);
            }
        });
        reportsMenu.add(menuItemAZSliding);

        MenuDetailReceiptReport.setText("Detailed Receipt Report");

        menuItemReceiptReport.setText("Receipt Report");
        menuItemReceiptReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemReceiptReportActionPerformed(evt);
            }
        });
        MenuDetailReceiptReport.add(menuItemReceiptReport);

        menuItemUnpostedReport.setText("Unposted Receipt Report");
        menuItemUnpostedReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUnpostedReportActionPerformed(evt);
            }
        });
        MenuDetailReceiptReport.add(menuItemUnpostedReport);

        reportsMenu.add(MenuDetailReceiptReport);

        mainMenuBar.add(reportsMenu);

        helpMenu.setMnemonic('H');
        helpMenu.setText("Help");

        menuItemContents.setMnemonic('C');
        menuItemContents.setText("Contents");
        menuItemContents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemContentsActionPerformed(evt);
            }
        });
        helpMenu.add(menuItemContents);

        menuItemAbout.setMnemonic('A');
        menuItemAbout.setText("About");
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        helpMenu.add(menuItemAbout);

        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1142, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemContentsActionPerformed
// TODO add your handling code here:
   try {
        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " +"VistA-Edge PMS User Manual vs 0.9.pdf");   //open the file chart.pdf
   }catch (Exception e){}
}//GEN-LAST:event_menuItemContentsActionPerformed

    private void menuItemBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemBillingActionPerformed
// TODO add your handling code here:
    try{
          if(billing==null){
              billing=new Billing();              
          }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemBillingActionPerformed

    private void menuItemCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCaseActionPerformed
// TODO add your handling code here:
    try{
        if(patientCase==null){
            patientCase=new Case();
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemCaseActionPerformed

    private void menuItemAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAppointmentActionPerformed
// TODO add your handling code here:
   try{
        if(basicAppointment==null){
            basicAppointment=new BasicAppointment();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemAppointmentActionPerformed

    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutActionPerformed
// TODO add your handling code here:
    try{
        if(aboutFrame==null){
            aboutFrame=new AboutFrame();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemAboutActionPerformed
 
    private void menuItemRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRegistrationActionPerformed
// TODO add your handling code here:
   try{
        if(patRegistration==null){
            patRegistration=new PatientRegistation();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemRegistrationActionPerformed
    
    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        System.exit(0);
}//GEN-LAST:event_menuItemExitActionPerformed

    private void menuItemPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPaymentActionPerformed
        // TODO add your handling code here:
      try{
          if(paymentPosting==null){
              paymentPosting=new PaymentPosting();              
          }
      }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemPaymentActionPerformed

    private void menuItemCPTICDLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCPTICDLinkActionPerformed
        // TODO add your handling code here:
     try{
        if(cpticdLink==null){
            cpticdLink=new CPT_ICD_LINK();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemCPTICDLinkActionPerformed

    private void menuItemProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemProviderActionPerformed
        // TODO add your handling code here:
         if(docMaster==null){
           docMaster=new DoctorMaster();           
        }
}//GEN-LAST:event_menuItemProviderActionPerformed

    private void menuItemInsCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemInsCompanyActionPerformed
        // TODO add your handling code here:
    try{
        if(insMaster==null){
            insMaster=new InsuranceCompanyMaster();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemInsCompanyActionPerformed

    private void menuItemChargeCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemChargeCodeActionPerformed
        // TODO add your handling code here:
    try{
        if(chargeCodeMaster==null){
            chargeCodeMaster=new ChargeCodeMaster();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemChargeCodeActionPerformed

    private void menuItemFacilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemFacilityActionPerformed
        // TODO add your handling code here:
    try{
        if(serFacility==null){
           serFacility=new Facility();                
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemFacilityActionPerformed

    private void menuItemAZSlidingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAZSlidingActionPerformed
        // TODO add your handling code here:
    try{
        if(azSlidingReport==null){
            azSlidingReport=new AZReport();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemAZSlidingActionPerformed

    private void menuItemReceiptReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemReceiptReportActionPerformed
        // TODO add your handling code here:
    try{
        if(receiptReport==null){
            receiptReport=new Receipt();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemReceiptReportActionPerformed

    private void menuItemUnpostedReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUnpostedReportActionPerformed
        // TODO add your handling code here:
    try{
        if(unpostedReport==null){
            unpostedReport=new Unposted();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_menuItemUnpostedReportActionPerformed

    private void butProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butProviderActionPerformed
        // TODO add your handling code here:
    try{        
        if(docMaster==null){
           docMaster=new DoctorMaster();                    
        }else{
            System.out.print(docMaster.getFocusOwner());
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butProviderActionPerformed

    private void butFacilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFacilityActionPerformed
        // TODO add your handling code here:
    try{
        if(serFacility==null){
           serFacility=new Facility();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butFacilityActionPerformed

    private void butInsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butInsuranceActionPerformed
        // TODO add your handling code here:
    try{
        if(insMaster==null){
            insMaster=new InsuranceCompanyMaster();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butInsuranceActionPerformed

    private void butCPTICDlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCPTICDlinkActionPerformed
        // TODO add your handling code here:
    try{
        if(cpticdLink==null){
            cpticdLink=new CPT_ICD_LINK();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butCPTICDlinkActionPerformed

    private void butChargeCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butChargeCodeActionPerformed
        // TODO add your handling code here:
   try{
        if(chargeCodeMaster==null){
            chargeCodeMaster=new ChargeCodeMaster();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butChargeCodeActionPerformed

    private void butRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRegistrationActionPerformed
        // TODO add your handling code here:
    try{
        if(patRegistration==null){
            patRegistration=new PatientRegistation();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butRegistrationActionPerformed

    private void butAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAppointmentActionPerformed
        // TODO add your handling code here:
    try{
        if(basicAppointment==null){
            basicAppointment=new BasicAppointment();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butAppointmentActionPerformed

    private void butCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCaseActionPerformed
        // TODO add your handling code here:
    try{
        if(patientCase==null){
            patientCase=new Case();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butCaseActionPerformed

    private void butBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBillingActionPerformed
        // TODO add your handling code here:
    try{
          if(billing==null){
              billing=new Billing();
          }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butBillingActionPerformed

    private void jToolBar1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jToolBar1AncestorAdded
        // TODO add your handling code here:
}//GEN-LAST:event_jToolBar1AncestorAdded

    private void butPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPaymentActionPerformed
        // TODO add your handling code here:
    try{
          if(paymentPosting==null){
              paymentPosting=new PaymentPosting();              
          }
      }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butPaymentActionPerformed

    private void butReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butReceiptActionPerformed
        // TODO add your handling code here:
    try{
        if(receiptReport==null){
            receiptReport=new Receipt();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butReceiptActionPerformed

    private void butHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butHelpActionPerformed
        // TODO add your handling code here:
        try {
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " +"VistA-Edge PMS User Manual vs 0.9.pdf");   //open the file chart.pdf
         } catch (Exception e){}
}//GEN-LAST:event_butHelpActionPerformed

    private void butAZSlidingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAZSlidingActionPerformed
        // TODO add your handling code here:
    try{
        if(azSlidingReport==null){
            azSlidingReport=new AZReport();            
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butAZSlidingActionPerformed

    private void butUnpostedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUnpostedActionPerformed
        // TODO add your handling code here:
    try{
        if(unpostedReport==null){
            unpostedReport=new Unposted();           
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butUnpostedActionPerformed

    private void menuItemUserManagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUserManagementActionPerformed
        // TODO add your handling code here:
        if(LoginScreen.category.equalsIgnoreCase("S")){
            if(userManagement==null){
                userManagement=new UserManagement();               
            }
        }else{            
             if(userPreference==null){
                UserPreference.oldUserName=LoginScreen.user;
                userPreference=new UserPreference();                
            }
        }
}//GEN-LAST:event_menuItemUserManagementActionPerformed

    private void butUserManagementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUserManagementActionPerformed
        // TODO add your handling code here:
    try{
        if(LoginScreen.category.equalsIgnoreCase("S")){
            if(userManagement==null){
                userManagement=new UserManagement();                
            }
        }else{
            if(userPreference==null){
                UserPreference.oldUserName=LoginScreen.user;                
                userPreference=new UserPreference();
            }
        }
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butUserManagementActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDI().setVisible(true);                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JMenu MenuDetailReceiptReport;
    public static javax.swing.JButton butAZSliding;
    public static javax.swing.JButton butAppointment;
    public static javax.swing.JButton butBilling;
    public static javax.swing.JButton butCPTICDlink;
    public static javax.swing.JButton butCase;
    public static javax.swing.JButton butChargeCode;
    public static javax.swing.JButton butFacility;
    public static javax.swing.JButton butHelp;
    public static javax.swing.JButton butInsurance;
    public static javax.swing.JButton butPayment;
    public static javax.swing.JButton butProvider;
    public static javax.swing.JButton butReceipt;
    public static javax.swing.JButton butRegistration;
    public static javax.swing.JButton butUnposted;
    public static javax.swing.JButton butUserManagement;
    public static javax.swing.JMenu fileMenu;
    public static javax.swing.JMenu helpMenu;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JToolBar jToolBar1;
    public static javax.swing.JMenuBar mainMenuBar;
    public static javax.swing.JMenu mastersMenu;
    public static javax.swing.JMenuItem menuItemAZSliding;
    public static javax.swing.JMenuItem menuItemAbout;
    public static javax.swing.JMenuItem menuItemAppointment;
    public static javax.swing.JMenuItem menuItemBilling;
    public static javax.swing.JMenuItem menuItemCPTICDLink;
    public static javax.swing.JMenuItem menuItemCase;
    public static javax.swing.JMenuItem menuItemChargeCode;
    public static javax.swing.JMenuItem menuItemContents;
    public static javax.swing.JMenuItem menuItemExit;
    public static javax.swing.JMenuItem menuItemFacility;
    public static javax.swing.JMenuItem menuItemInsCompany;
    public static javax.swing.JMenuItem menuItemPayment;
    public static javax.swing.JMenuItem menuItemProvider;
    public static javax.swing.JMenuItem menuItemReceiptReport;
    public static javax.swing.JMenuItem menuItemRegistration;
    public static javax.swing.JMenuItem menuItemUnpostedReport;
    public static javax.swing.JMenuItem menuItemUserManagement;
    public static javax.swing.JMenu reportsMenu;
    public static javax.swing.JMenu transactionsMenu;
    // End of variables declaration//GEN-END:variables
    
}
