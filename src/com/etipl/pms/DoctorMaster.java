/* ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;
; Copyright Â© 2009 Edgeware Technologies (India) Pvt Ltd ;
; ;
; This source code contains the intellectual property ;
; of its copyright holder(s), and is made available ;
; under a license. If you do not know the terms of ;
; the license, please stop and do not read further. ;
; ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*/

package com.etipl.pms;

import com.etipl.pms.datalayer.CityStateMethods;
import com.etipl.pms.datalayer.DoctorMethods;
import com.etipl.pms.entity.CityState;
import com.etipl.pms.entity.Departments;
import com.etipl.pms.entity.Doctor;
import java.awt.Dimension;
import java.awt.Toolkit;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.Configurator;

/**
 *
 * @author MUTHU
 */
 public class DoctorMaster extends javax.swing.JFrame {
    JFrame frame=new JFrame();
     private int flag=1;

    /** Creates new form DoctorMaster */
    public DoctorMaster() {
        initComponents();
        setVisible(true);
        
        Configurator.enableAutoCompletion(this.cmbClinic);
        Configurator.enableAutoCompletion(this.cmbCity);        
        screenDisplay();
        loadDept();
    }

    private void screenDisplay(){
    Dimension frameDimension = getSize();

		// position the topFrame
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if (frameDimension.height > screenSize.height)
        {
		frameDimension.height = screenSize.height;
        }

        if (frameDimension.width > screenSize.width)
        {
			frameDimension.width = screenSize.width;
        }
        setLocation((screenSize.width - frameDimension.width) / 2,
				(screenSize.height - frameDimension.height) / 2);
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        txtDocCode = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        jLabel88 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAdd = new javax.swing.JTextField();
        txtMidInt = new javax.swing.JTextField();
        txtDegree = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNPI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        txtFederal = new javax.swing.JTextField();
        cmbClinic = new javax.swing.JComboBox();
        jLabel92 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTax = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCell = new javax.swing.JFormattedTextField();
        txtZipCode = new javax.swing.JTextField();
        cmbCity = new javax.swing.JComboBox();
        txtState = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDEA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtStateLicence = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDoctor = new javax.swing.JTable();
        btSave = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        butSearch = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtMedicaid = new javax.swing.JTextField();
        txtMedicare = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtRR = new javax.swing.JTextField();
        txtBCBS = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMedicaidG = new javax.swing.JTextField();
        txtMedicareG = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtRRG = new javax.swing.JTextField();
        txtBCBSG = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Provider");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Provider"));

        jLabel91.setText("Last Name");

        jLabel93.setText("Code");

        jLabel97.setText("Zipcode");

        jLabel103.setText("First Name");

        jLabel88.setText("Middle Initial");

        jLabel90.setText("Credentials");

        jLabel1.setText("Address");

        jLabel2.setText("City");

        txtNPI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNPIKeyTyped(evt);
            }
        });

        jLabel3.setText("NPI ");

        jLabel99.setText("FederalTaxID");

        cmbClinic.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jLabel92.setText("Clinic");

        jLabel4.setText("TaxonomyID");

        jLabel5.setText("Phone");

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*");

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("*");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        try {
            txtCell.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###)###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCell.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtZipCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtZipCodeFocusLost(evt);
            }
        });
        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyTyped(evt);
            }
        });

        jLabel98.setText("State");

        jLabel6.setText("DEA ");

        jLabel7.setText("State Licence");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel93)
                            .addComponent(jLabel91))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel1)
                    .addComponent(jLabel97)
                    .addComponent(jLabel90)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDocCode, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDegree)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel92)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12))
                            .addComponent(jLabel103)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbClinic, 0, 249, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel88)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMidInt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCell, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtAdd, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTax)
                                .addComponent(txtZipCode, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cmbCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel98)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDEA)
                                        .addComponent(txtNPI, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel99)
                                        .addComponent(jLabel7))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtStateLicence)
                                        .addComponent(txtFederal, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)))))))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel93)
                    .addComponent(jLabel10)
                    .addComponent(jLabel92)
                    .addComponent(jLabel12)
                    .addComponent(cmbClinic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel103)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel88)
                        .addComponent(txtMidInt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel91)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel90)
                        .addComponent(txtDegree, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(txtCell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel98))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel99)
                            .addComponent(txtFederal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel97)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStateLicence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDEA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Provider Details"));

        tabDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name & Creds", "Address", "NPI", "FederalTaxID", "TaxonomyID", "Phone", "Clinic"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabDoctorMouseClicked(evt);
            }
        });
        tabDoctor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabDoctorKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabDoctor);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );

        btSave.setMnemonic('a');
        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });
        btSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btSaveKeyPressed(evt);
            }
        });

        jButton1.setMnemonic('d');
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton6.setMnemonic('r');
        jButton6.setText("Reset");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6KeyPressed(evt);
            }
        });

        butSearch.setMnemonic('e');
        butSearch.setText("Search");
        butSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSearchActionPerformed(evt);
            }
        });
        butSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butSearchKeyPressed(evt);
            }
        });

        jButton3.setMnemonic('c');
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Group IDs"));

        jLabel17.setText("Medicaid");

        jLabel18.setText("Medicare ");

        jLabel19.setText("Rail Road");

        jLabel20.setText("BCBS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBCBS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtMedicare, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtMedicaid, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtRR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtMedicare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(txtMedicaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(txtBCBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txtRR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Individual IDs"));

        jLabel14.setText("Medicaid");

        jLabel13.setText("Medicare ");

        jLabel15.setText("Rail Road");

        jLabel16.setText("BCBS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBCBSG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtMedicareG, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtMedicaidG, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtRRG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtMedicareG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(txtMedicaidG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(txtBCBSG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(txtRRG, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(btSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton1)
                            .addComponent(btSave)
                            .addComponent(butSearch)
                            .addComponent(jButton3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void loadDept(){
    try{
        DoctorMethods dm=new DoctorMethods();
        
        List<Departments> lstcd=new ArrayList<Departments>();
        lstcd=dm.loadDepartments();
        for(int i=0;i<lstcd.size();i++){
           Departments cd=new Departments();
           cd=lstcd.get(i);
           this.cmbClinic.addItem(cd.getName()+" - "+cd.getCode());
        }
        if(lstcd.size()>0){
            this.cmbClinic.setSelectedIndex(-1);
        }
      }catch(Exception e){e.printStackTrace();}
    }

    private void showData(int rowCount,int rowSel){
         txtDocCode.setEditable(false);
        try{

              DoctorMethods dm=new DoctorMethods();
              String[] name = null;
              String comboSel = null;

                Doctor dr= new Doctor();
                if(rowCount>0){
                    if(tabDoctor.getValueAt(rowSel, 0)!=null)
                        dr.setDOCTOR_CODE(tabDoctor.getValueAt(rowSel, 0).toString());
                }

                List<Doctor> lstdoc=new ArrayList<Doctor>();

                lstdoc=dm.loadDoctors(dr);

                if(lstdoc!=null){

                    String[][] arr=new String[lstdoc.size()][8];
                    for(int i=0;i<lstdoc.size();i++){
                       Doctor doc=new Doctor();
                       doc=lstdoc.get(i);
                       this.txtDocCode.setText(doc.getDOCTOR_CODE());

                       if(doc.getDOCTOR_NAME().toString()!=null){
                            name=doc.getDOCTOR_NAME().toString().split("-");
                            //System.out.print("Length "+name.length);
                            if(name.length>0)
                                this.txtLastName.setText(name[0]);
                            if(name.length>1)
                                this.txtFirstName.setText(name[1]);
                            if(name.length>2)
                                this.txtMidInt.setText(name[2]);
                        }

                        this.txtDegree.setText(doc.getCREDENTIALS());
                        this.txtAdd.setText(doc.getAdd2());
                        this.cmbCity.setSelectedItem(doc.getCity());
                        this.txtState.setText(doc.getState());
                        this.txtZipCode.setText(doc.getZip());
                        this.txtNPI.setText(doc.getNPI());
                        this.txtFederal.setText(doc.getFEDERALTAXID());
                        this.txtTax.setText(doc.getTAXONOMY());
                        this.txtCell.setText(doc.getCELL());

                        if(doc.getSPECIALITY()!=null){
                            comboSel=checkCode(doc.getSPECIALITY().toString());
                            if(comboSel!=null){
                                this.cmbClinic.setSelectedItem(comboSel);
                            }
                        }else{this.cmbClinic.setSelectedIndex(-1);   }

                        this.txtMedicaidG.setText(doc.getMEDICAIDGROUP());
                        this.txtMedicareG.setText(doc.getMEDICAREGROUP());
                        this.txtBCBSG.setText(doc.getBCBSGROUP());
                        this.txtRRG.setText(doc.getRailRoadGroup());
                        this.txtMedicaid.setText(doc.getMEDICAID());
                        this.txtMedicare.setText(doc.getMEDICARE());
                        this.txtBCBS.setText(doc.getBCBS());
                        this.txtRR.setText(doc.getRailRoad());

                        this.txtDEA.setText(doc.getDEANO());
                        this.txtStateLicence.setText(doc.getStateLicence());
                    }
                }else{
                    clearAll();
                }
                btSave.setText("Update");
                btSave.setEnabled(true);

        }catch(Exception e){e.printStackTrace();}
    }

    private void tabDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDoctorMouseClicked
       // TODO add your handling code here:
       int rowCount=tabDoctor.getRowCount();
       int curRow=tabDoctor.getSelectedRow();       
       showData(rowCount,curRow);
}//GEN-LAST:event_tabDoctorMouseClicked

    private String checkCode(String code){
    try{
        String[] splitCode;
        String codeName = null;
        String codeCombo=null;

        if(this.cmbClinic.getItemCount()!=0){            
            int items=this.cmbClinic.getItemCount();
            for(int i=1;i<items;i++){
                splitCode=this.cmbClinic.getItemAt(i).toString().split("-");
                if(splitCode.length>1){                    
                    codeCombo=splitCode[1].trim();                    
                    if(codeCombo.equalsIgnoreCase(code.trim())){
                        codeName=this.cmbClinic.getItemAt(i).toString();

                        return codeName;                       
                    }
                }
            }
        }
        return codeName;
    }catch(Exception e){e.printStackTrace();return null;}
    }
    
    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        // TODO add your handling code here:
       saveDoctor();
}//GEN-LAST:event_btSaveActionPerformed

    private Doctor settingDoctorObject(){
    try{
            Doctor doc=new Doctor();
            String[] splitCode;

            if(cmbClinic.getSelectedIndex()!= -1){
                splitCode=cmbClinic.getSelectedItem().toString().split(" - ");
                if(splitCode.length>1){
                    doc.setSPECIALITY(splitCode[1]);
                }
            }

            if(!txtDocCode.getText().isEmpty()){
                doc.setDOCTOR_CODE(txtDocCode.getText().toString());
            }
            if(!txtLastName.getText().isEmpty() || !txtFirstName.getText().isEmpty() || !txtMidInt.getText().isEmpty()){
                doc.setDOCTOR_NAME(txtLastName.getText().toString()+"-"+txtFirstName.getText().toString()+"-"+txtMidInt.getText());
            }

            doc.setCREDENTIALS(this.txtDegree.getText().toString());
            doc.setAdd2(txtAdd.getText().toString());
            doc.setZip(txtZipCode.getText().toString());
            
            if(cmbCity.getSelectedIndex()!= -1){
            doc.setCity(cmbCity.getSelectedItem().toString());
            }

            doc.setState(txtState.getText().toString());
            doc.setNPI(txtNPI.getText().toString());
            doc.setTAXONOMY(txtTax.getText().toString());
            doc.setDEANO(this.txtDEA.getText().toString());;
            doc.setStateLicence(this.txtStateLicence.getText().toString());

            if(txtCell.getText().compareTo("(   )   -    ")!=0){           
                doc.setCELL(txtCell.getText().toString());
            }

            doc.setFEDERALTAXID(txtFederal.getText().toString());

            doc.setMEDICAIDGROUP(this.txtMedicaidG.getText());
            doc.setMEDICAREGROUP(this.txtMedicareG.getText());
            doc.setBCBSGROUP(this.txtBCBSG.getText());
            doc.setRailRoadGroup(this.txtRRG.getText());

            doc.setMEDICAID(this.txtMedicaid.getText());
            doc.setMEDICARE(this.txtMedicare.getText());
            doc.setBCBS(this.txtBCBS.getText());
            doc.setRailRoad(this.txtRR.getText());
            
            return doc;
            
    }catch(Exception e){e.printStackTrace(); return null;}
    }
    private void saveDoctor(){
    try{

            int res=0,chk=0;            
            
            DoctorMethods docm=new DoctorMethods();

            if(txtDocCode.getText().isEmpty() || txtDocCode.getText().equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(frame,"Code should not be left empty");
                this.txtDocCode.requestFocus();
                return;
            }
            
            if(txtLastName.getText().isEmpty() || txtLastName.getText().equalsIgnoreCase("")){
               JOptionPane.showMessageDialog(frame,"LastName should not be left empty");
               this.txtLastName.requestFocus();
               return;
            }

            if(cmbClinic.getSelectedIndex()==-1){
                JOptionPane.showMessageDialog(frame,"Clinic should not be left empty");
                this.cmbClinic.requestFocus();
                return;
            }

            if(cmbClinic.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(frame,"Clinic should not be left empty");
                this.cmbClinic.requestFocus();
                return;
            }
            
                    if(!btSave.getText().equalsIgnoreCase("Update")){
                         chk=docm.checkDuplicateCode(txtDocCode.getText());
                         if(chk==0){
                            res=docm.saveDoctor(settingDoctorObject());
                            if(res==1){
                                JOptionPane.showMessageDialog(frame,"Provider Saved Successfully ... ");
                                clearAll();
                                filltabDoctor();
                            }
                         }else{
                                JOptionPane.showMessageDialog(frame,"Code already exists");
                        }
                    }else{
                        res=docm.updateDoctor(settingDoctorObject());
                        if(res==1){
                            JOptionPane.showMessageDialog(frame,"Provider Updated Successfully ... ");
                            btSave.setText("Save");
                            clearAll();
                            btSave.setEnabled(true);
                            filltabDoctor();
                        }
                    }            
            this.txtDocCode.requestFocus();
            
        }catch(Exception e){e.printStackTrace();}
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    try{       
            deleteDoctor();
        
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_jButton1ActionPerformed

    private void deleteDoctor(){
        try{
            int chk=1;
            
            if(txtDocCode.getText().isEmpty() || txtDocCode.getText().equalsIgnoreCase("")){
                return;
            }

            chk=JOptionPane.showConfirmDialog(frame,"Do U want to delete the Record");
            if(chk==0){
                int res=0;
                DoctorMethods objDel=new DoctorMethods();
                res=objDel.deleteDoctor(txtDocCode.getText());
                if(res==1){
                   JOptionPane.showMessageDialog(frame,"Deleted Successfully");
                    clearAll();
                    filltabDoctor();
                }
            }
        }catch(Exception e){e.printStackTrace();}
        txtDocCode.setEditable(true);
    }

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        txtDocCode.setEditable(true);
        clearAll();
        clearTabDoctor();
        txtDocCode.requestFocus();
}//GEN-LAST:event_jButton6ActionPerformed
private void clearAll(){
            btSave.setEnabled(true);
            btSave.setText("Save");
            this.txtDocCode.setText("");
            this.txtAdd.setText("");
            this.cmbCity.setSelectedIndex(-1);
            this.txtDegree.setText("");
            this.txtFederal.setText("");
            this.txtLastName.setText("");
            this.txtFirstName.setText("");            
            this.txtNPI.setText("");
            this.txtMidInt.setText("");
            this.cmbClinic.setSelectedIndex(-1);
            this.txtTax.setText("");
            this.txtCell.setText("");
            this.txtZipCode.setText("");
            this.txtState.setText("");
            this.txtMedicaid.setText("");
            this.txtMedicaidG.setText("");
                    this.txtRRG.setText("");
                    this.txtRR.setText("");
                    this.txtBCBS.setText("");
                    this.txtBCBSG.setText("");
                    this.txtMedicare.setText("");
                    this.txtMedicareG.setText("");
                    
                    this.txtDEA.setText("");
                    this.txtStateLicence.setText("");

}
private void butSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSearchActionPerformed
        // TODO add your handling code here:
         filltabDoctor();
         if(tabDoctor.getRowCount()!=0){
                    tabDoctor.changeSelection(0, 0, false, false);
                    tabDoctor.setFocusable(true);
                    tabDoctor.requestFocus();
        }
}//GEN-LAST:event_butSearchActionPerformed


    private void clearTabDoctor(){
        tabDoctor.setModel(new javax.swing.table.DefaultTableModel(null,new String[]{"Code","Name","Address","NPI","FederalTaxID","TaxonomyID","Phone","Clinic"}));
    }

    private void filltabDoctor(){
    try{
        DoctorMethods dm=new DoctorMethods();        
        List<Doctor> lstdoc=new ArrayList<Doctor>();
        
        lstdoc=dm.loadDoctors(settingDoctorObject());
        if(lstdoc!=null){
            String[][] arr=new String[lstdoc.size()][10];
            for(int i=0;i<lstdoc.size();i++){
               Doctor doc=new Doctor();
               doc=lstdoc.get(i);
               arr[i][0]=doc.getDOCTOR_CODE();
               arr[i][1]=doc.getDOCTOR_NAME()+"-"+doc.getCREDENTIALS();
               arr[i][2]=doc.getAdd2()+":"+doc.getCity()+":"+doc.getState()+":"+doc.getZip();
               arr[i][3]=doc.getNPI();
               arr[i][4]=doc.getFEDERALTAXID();
               arr[i][5]=doc.getTAXONOMY();
               arr[i][6]=doc.getCELL();
               arr[i][7]=doc.getSPECIALITY();
               arr[i][8]=doc.getDEANO();
               arr[i][9]=doc.getStateLicence();
            }
            tabDoctor.setModel(new javax.swing.table.DefaultTableModel(arr,new String[]{"Code","Name","Address","NPI","FederalTaxID","TaxonomyID","Phone","Clinic"}
            )
                   {
                       boolean[] canEdit = new boolean [] {
                              false, false,false, false,false, false,false, false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
        }else{
            tabDoctor.setModel(new javax.swing.table.DefaultTableModel(null,new String[]{"Code","Name","Address","NPI","FederalTaxID","TaxonomyID","Phone","Clinic"}));
        }

    }catch(Exception e){e.printStackTrace();}
    }
    private void tabDoctorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabDoctorKeyPressed
        // TODO add your handling code here:
    try{
        int rowCount=tabDoctor.getRowCount();
        int curRow=tabDoctor.getSelectedRow();

        if(evt.getKeyCode()==evt.VK_DOWN){
            if(curRow==rowCount-1){
                    evt.setKeyCode(evt.VK_ENTER);
                    tabDoctor.setFocusable(true);
                    tabDoctor.requestFocus();
                    curRow=0;
            }else{
                    curRow=curRow+1;
            }           
        }        
        if(evt.getKeyCode()==evt.VK_UP){
            if(curRow!=0 && curRow<rowCount){
                curRow=curRow-1;
            }
        }
         if(curRow!=-1){
             showData(rowCount,curRow);
         }
        
    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_tabDoctorKeyPressed

    private void btSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btSaveKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            saveDoctor();
        }
    }//GEN-LAST:event_btSaveKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
             deleteDoctor();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            txtDocCode.setEditable(true);
            clearAll();
        }
    }//GEN-LAST:event_jButton6KeyPressed

    private void butSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butSearchKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
             filltabDoctor();
        }
}//GEN-LAST:event_butSearchKeyPressed

    private void txtNPIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNPIKeyTyped
        // TODO add your handling code here:
        int ascii = (int) evt.getKeyChar();
        //evt.VK_F1
            if (ascii >=48 && ascii <=57 ) {
            }
            else{
                if (evt.getKeyChar()==evt.VK_BACK_SPACE)
                {}
                else{
                    evt.consume();
                }
            }
    }//GEN-LAST:event_txtNPIKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cityState(){
        try{
                List<CityState> lstCS=new ArrayList<CityState>();
                CityStateMethods csm = new CityStateMethods();
                lstCS=csm.loadCityState(txtZipCode.getText());
                if(lstCS!=null){
                    cmbCity.removeAllItems();
                    CityState cs =new CityState();
                    for(int i=0;i<lstCS.size();i++){
                        cs=lstCS.get(i);
                        cmbCity.addItem(cs.getCity());
                    }
                    txtState.setText(cs.getState());
                    cmbCity.setSelectedIndex(0);
                }else{
                    cmbCity.removeAllItems();
                    txtState.setText("");
                }
            }catch(Exception e){e.printStackTrace();}
    }

    private void txtZipCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyPressed
        // TODO add your handling code here:    
        if(evt.getKeyCode()==10){
            cityState();
        }    
}//GEN-LAST:event_txtZipCodeKeyPressed

    private void txtZipCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtZipCodeFocusLost
        // TODO add your handling code here:
        cityState();
    }//GEN-LAST:event_txtZipCodeFocusLost

    private void txtZipCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyTyped
        // TODO add your handling code here:
         int ascii = (int) evt.getKeyChar();
            if (ascii >=48 && ascii <=57 ) {
            }
            else
            {
                if (evt.getKeyChar()==evt.VK_BACK_SPACE)
                {
                }
                else
                {
                    evt.consume();
                }

            }
    }//GEN-LAST:event_txtZipCodeKeyTyped

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
       if(this.getDefaultCloseOperation()==MDI.defaultWindowClose){
            MDI.docMaster=null;
       }
    }//GEN-LAST:event_formWindowClosed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorMaster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSave;
    private javax.swing.JButton butSearch;
    private javax.swing.JComboBox cmbCity;
    private javax.swing.JComboBox cmbClinic;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabDoctor;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtBCBS;
    private javax.swing.JTextField txtBCBSG;
    private javax.swing.JFormattedTextField txtCell;
    private javax.swing.JTextField txtDEA;
    private javax.swing.JTextField txtDegree;
    private javax.swing.JTextField txtDocCode;
    private javax.swing.JTextField txtFederal;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMedicaid;
    private javax.swing.JTextField txtMedicaidG;
    private javax.swing.JTextField txtMedicare;
    private javax.swing.JTextField txtMedicareG;
    private javax.swing.JTextField txtMidInt;
    private javax.swing.JTextField txtNPI;
    private javax.swing.JTextField txtRR;
    private javax.swing.JTextField txtRRG;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStateLicence;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables

}
