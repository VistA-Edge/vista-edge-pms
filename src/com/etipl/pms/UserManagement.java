/* ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;
; Copyright Â© 2009 Edgeware Technologies (India) Pvt Ltd ;
; ;
; This source code contains the intellectual property ;
; of its copyright holder(s), and is made available ;
; under a license. If you do not know the terms of ;
; the license, please stop and do not read further. ;
; ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*/

package com.etipl.pms;

import com.etipl.pms.datalayer.UsersMethods;
import com.etipl.pms.entity.Users;

import com.etipl.pms.utilities.Utiles;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;


public class UserManagement extends javax.swing.JFrame {

    /** Creates new form UserManagement */

    public UserManagement() {
        initComponents();
        setVisible(true);
        
        this.lblChange.setVisible(false);
        this.lblStatus.setVisible(false);
        screenDisplay();
        dynamicWidthofColumnforTabUsers();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabUsers = new javax.swing.JTable();
        butSave = new javax.swing.JButton();
        butReset = new javax.swing.JButton();
        butClose = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblPwd = new javax.swing.JLabel();
        lblCPwd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox();
        txtUser = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        lblChange = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblM3 = new javax.swing.JLabel();
        lblM2 = new javax.swing.JLabel();
        butSearch = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Management");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tabUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabUsersMouseClicked(evt);
            }
        });
        tabUsers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabUsersKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabUsers);

        butSave.setText("Add");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });
        butSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butSaveKeyPressed(evt);
            }
        });

        butReset.setText("Reset");
        butReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butResetActionPerformed(evt);
            }
        });
        butReset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butResetKeyPressed(evt);
            }
        });

        butClose.setText("Close");
        butClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCloseActionPerformed(evt);
            }
        });
        butClose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butCloseKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Username");

        lblPwd.setText("Password");

        lblCPwd.setText("Conf.Pwd");

        jLabel4.setText("Level");

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal user", "Super user" }));

        lblChange.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        lblChange.setForeground(new java.awt.Color(0, 102, 255));
        lblChange.setText("Click here to change password");
        lblChange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChangeMouseClicked(evt);
            }
        });

        jLabel2.setForeground(java.awt.Color.red);
        jLabel2.setText("*");

        jLabel3.setForeground(java.awt.Color.red);
        jLabel3.setText("*");

        lblM3.setForeground(java.awt.Color.red);
        lblM3.setText("*");

        lblM2.setForeground(java.awt.Color.red);
        lblM2.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChange, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(lblPwd))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblM2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(12, 12, 12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCPwd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblM3, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                .addGap(14, 14, 14)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtConfirmPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(cmbCategory, javax.swing.GroupLayout.Alignment.TRAILING, 0, 190, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPwd)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblM2))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPwd)
                    .addComponent(lblM3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(lblChange)
                .addContainerGap())
        );

        butSearch.setText("Search");
        butSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSearchActionPerformed(evt);
            }
        });
        butSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butSearchKeyPressed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 10));
        lblStatus.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(butSave, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butReset, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butClose))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 12, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSave)
                    .addComponent(butReset)
                    .addComponent(butSearch)
                    .addComponent(butClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private Users setObjects(){
    try{
        Users us=new Users();    
        
        us.setUname(this.txtUser.getText());
        us.setUser(this.txtUser.getText());
        us.setPassword(Utiles.hashPassword(this.txtPassword.getText()));
        us.setCategory(this.cmbCategory.getSelectedItem().toString().substring(0, 1));

        return us;
    }catch(Exception e){e.printStackTrace(); return null;}
    }


    private void screenDisplay(){
    Dimension frameDimension = getSize();

		// position the topFrame
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if (frameDimension.height > screenSize.height)
        {
		frameDimension.height = screenSize.height;
        }

        if (frameDimension.width > screenSize.width)
        {
			frameDimension.width = screenSize.width;
        }
        setLocation((screenSize.width - frameDimension.width) / 2,
				(screenSize.height - frameDimension.height) / 2);
}

    private void saveDelete(){
         try{
         int res=0;
         int chk=1;
         UsersMethods um=new UsersMethods();
         
       if(this.butSave.getText().equalsIgnoreCase("Delete")){
            chk=JOptionPane.showConfirmDialog(null,"Do U want to delete the user");
            if(chk==0){
                if(um.deleteUser(this.txtUser.getText())==1){
                    JOptionPane.showMessageDialog(null,"User deleted successfully...");
                    this.txtUser.setText("");
                    this.txtPassword.setText("");
                    this.txtConfirmPassword.setText("");
                    this.txtUser.requestFocus();
                    clear();
                }
            }
       }else{
             
             if(this.txtUser.getText().trim().isEmpty()){
                 this.lblStatus.setVisible(true);
                 this.lblStatus.setText("Username should not be left empty");
                 this.txtUser.requestFocus();
                 return;
             }

             if(this.txtPassword.getText().trim().isEmpty()){
                this.lblStatus.setVisible(true);
                this.lblStatus.setText("Password should not be left empty");
                this.txtPassword.requestFocus();
                return;
             }

             if(!this.txtPassword.getText().equalsIgnoreCase(this.txtConfirmPassword.getText())){
                 this.lblStatus.setVisible(true);
                 this.lblStatus.setText("Password and conf. password do not match");
                this.txtConfirmPassword.setText("");
                this.txtConfirmPassword.requestFocus();
                return;
            }          

            if(um.checkDuplicateCode(txtUser.getText(),"")!=1){
                res=um.saveUsers(setObjects());
                if(res==1){
                    JOptionPane.showMessageDialog(null,"User added successfully...");
                    this.txtUser.setText("");
                    this.txtPassword.setText("");
                    this.txtConfirmPassword.setText("");
                    this.txtUser.requestFocus();                    
                }

            }else{
                JOptionPane.showMessageDialog(null,"Username already exits. \n Duplicate username.");
                this.txtUser.requestFocus();
            }
             this.lblStatus.setVisible(false);
       }
         fillTabUsers();
     }catch(Exception e){e.printStackTrace();}
    }
    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
        // TODO add your handling code here:
        saveDelete();
}//GEN-LAST:event_butSaveActionPerformed

    public void fillTabUsers(){
    try{
        UsersMethods um=new UsersMethods();
        tabUsers.setModel(new javax.swing.table.DefaultTableModel(um.loadUsers(setObjects()),new String[]{"User Name","Category"}
                )
                   {
                       boolean[] canEdit = new boolean [] {
                              false, false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
        dynamicWidthofColumnforTabUsers();
    }catch(Exception e){e.printStackTrace();}
    }
    private void clear(){
        this.txtUser.setText("");
        this.txtPassword.setText("");
        this.txtConfirmPassword.setText("");
        this.cmbCategory.setSelectedIndex(0);
        this.lblPwd.setVisible(true);
        this.txtPassword.setVisible(true);
        this.lblCPwd.setVisible(true);
        this.txtConfirmPassword.setVisible(true);
        this.lblM2.setVisible(true);
        this.lblM3.setVisible(true);
        this.txtUser.setEditable(true);
        this.txtUser.requestFocus();
        cmbCategory.setEnabled(true);
        this.lblChange.setVisible(false);
        this.butSave.setText("Add");
        this.lblStatus.setVisible(false); 
        tabUsers.setModel(new javax.swing.table.DefaultTableModel(null,new String[]{"User Name","Category"}));
        dynamicWidthofColumnforTabUsers();
    }
    private void butResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butResetActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_butResetActionPerformed

    
    private void butCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCloseActionPerformed
        // TODO add your handling code here:
         this.dispose();
    }//GEN-LAST:event_butCloseActionPerformed

    private void butSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSearchActionPerformed
        // TODO add your handling code here:
    try{
       fillTabUsers();
       if(tabUsers.getRowCount()!=0){
                    tabUsers.changeSelection(0, 0, false, false);
                    tabUsers.setFocusable(true);
                    tabUsers.requestFocus();                   
        }
    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_butSearchActionPerformed

    private void showData(int rowCount,int rowSel){
    try{
       if(rowCount>0){
        this.txtUser.setText(tabUsers.getValueAt(rowSel,0).toString());
        this.txtUser.setEditable(false);
        this.lblPwd.setVisible(false);
        this.txtPassword.setVisible(false);
        this.lblCPwd.setVisible(false);
        this.txtConfirmPassword.setVisible(false);
        this.lblM2.setVisible(false);
        this.lblM3.setVisible(false);
        cmbCategory.setEnabled(false);
        lblChange.setVisible(true);
        this.butSave.setText("Delete");
       }
    }catch(Exception e){e.printStackTrace();}
    }

    private void tabUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabUsersMouseClicked
        // TODO add your handling code here:
       int rowCount=tabUsers.getRowCount();
       int curRow=tabUsers.getSelectedRow();
       showData(rowCount,curRow);
    }//GEN-LAST:event_tabUsersMouseClicked

    private void lblChangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChangeMouseClicked
        // TODO add your handling code here:
    try{
        this.dispose();
        UserPreference.oldUserName=this.txtUser.getText();
        new UserPreference().setVisible(true);
        
    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_lblChangeMouseClicked

    private void butSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butSaveKeyPressed
        // TODO add your handling code here:
        saveDelete();
    }//GEN-LAST:event_butSaveKeyPressed

    private void butResetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butResetKeyPressed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_butResetKeyPressed

    private void butSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butSearchKeyPressed
        // TODO add your handling code here:
    try{
       fillTabUsers();
    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_butSearchKeyPressed

    private void butCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butCloseKeyPressed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_butCloseKeyPressed

    private void tabUsersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabUsersKeyPressed
        // TODO add your handling code here:
    try{
        int rowCount=tabUsers.getRowCount();
        int curRow=tabUsers.getSelectedRow();

        if(evt.getKeyCode()==evt.VK_DOWN){
            if(curRow==rowCount-1){
                    evt.setKeyCode(evt.VK_ENTER);
                    tabUsers.setFocusable(true);
                    tabUsers.requestFocus();
                    curRow=0;
            }else{
                    curRow=curRow+1;
            }
        }

        if(evt.getKeyCode()==evt.VK_UP){
            if(curRow!=0 && curRow<rowCount){
                curRow=curRow-1;
            }
        }

         if(curRow!=-1){
             showData(rowCount,curRow);
         }

    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_tabUsersKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    try{
        if(this.getDefaultCloseOperation()==MDI.defaultWindowClose){
            MDI.userManagement=null;
        }
    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_formWindowClosed

    private void dynamicWidthofColumnforTabUsers(){
               TableColumn tc;
               tc = tabUsers.getColumnModel().getColumn(0);
               tc.setPreferredWidth(150);

               tc = tabUsers.getColumnModel().getColumn(1);
               tc.setPreferredWidth(50);
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butClose;
    private javax.swing.JButton butReset;
    private javax.swing.JButton butSave;
    public javax.swing.JButton butSearch;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCPwd;
    private javax.swing.JLabel lblChange;
    private javax.swing.JLabel lblM2;
    private javax.swing.JLabel lblM3;
    private javax.swing.JLabel lblPwd;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tabUsers;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}
