/* ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;
; Copyright Â© 2009 Edgeware Technologies (India) Pvt Ltd ;
; ;
; This source code contains the intellectual property ;
; of its copyright holder(s), and is made available ;
; under a license. If you do not know the terms of ;
; the license, please stop and do not read further. ;
; ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*/

package com.etipl.pms;

import com.etipl.pms.datalayer.CPT_ICD_LINKDB;
import com.etipl.pms.entity.CPT_ICD_LINKDef;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class CPT_ICD_LINK extends javax.swing.JFrame {

    public static String[][] arr = new String[100][1];
    String procCode,icd="",icd2;
    public static String[][] arr1,arr12,arr22;
    public static String[][] str;

    /** Creates new form CPT_ICD_LINK */
    public CPT_ICD_LINK() {
        initComponents();
        setVisible(true);
        screenDisplay();
        txtCPTCode.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtCPTDes = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        txtNotes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCPTCode = new javax.swing.JTextField();
        butCPTSearch = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabCPTS = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtICDCode = new javax.swing.JTextField();
        butICDSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCPT = new javax.swing.JTextField();
        butSend = new javax.swing.JButton();
        butResend = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        txtICDSNotes = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        txtICDDes = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabICDS = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabICDLink = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        butAdd = new javax.swing.JButton();
        butReset = new javax.swing.JButton();
        butClose = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CPT_ICD Link");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CPT Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCPTDes, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txtCPTDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Notes"));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNotes, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(txtNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Procedure Code / Description");

        butCPTSearch.setText("Search");
        butCPTSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCPTSearchActionPerformed(evt);
            }
        });
        butCPTSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butCPTSearchKeyPressed(evt);
            }
        });

        tabCPTS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "List of Procedure Codes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabCPTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabCPTSMouseClicked(evt);
            }
        });
        tabCPTS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabCPTSKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tabCPTS);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtCPTCode, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butCPTSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCPTCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butCPTSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ICD Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel3.setText("Diagnosis Code");

        butICDSearch.setText("Search");
        butICDSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butICDSearchActionPerformed(evt);
            }
        });
        butICDSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                butICDSearchKeyPressed(evt);
            }
        });

        jLabel4.setText("List of Diagnosis Codes");

        jLabel5.setText("Diagnosis Codes for");

        butSend.setText(">");
        butSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSendActionPerformed(evt);
            }
        });

        butResend.setText("<");
        butResend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butResendActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Notes"));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtICDSNotes, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(txtICDSNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtICDDes, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(txtICDDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabICDS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabICDS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabICDSMouseClicked(evt);
            }
        });
        tabICDS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabICDSKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabICDS);

        tabICDLink.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabICDLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabICDLinkMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabICDLink);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtICDCode, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(butICDSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(butSend)
                            .addComponent(butResend))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPT, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane3, 0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtICDCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butICDSearch))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(txtCPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(butSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(butResend)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eligible CPT_ICD_Link", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        butAdd.setText("Add");
        butAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddActionPerformed(evt);
            }
        });

        butReset.setText("Reset");
        butReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butResetActionPerformed(evt);
            }
        });

        butClose.setText("Close");
        butClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addComponent(butAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butClose)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butClose)
                    .addComponent(butReset)
                    .addComponent(butAdd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void screenDisplay(){
    Dimension frameDimension = getSize();

		// position the topFrame
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if (frameDimension.height > screenSize.height)
        {
		frameDimension.height = screenSize.height;
        }

        if (frameDimension.width > screenSize.width)
        {
			frameDimension.width = screenSize.width;
        }
        setLocation((screenSize.width - frameDimension.width) / 2,
				(screenSize.height - frameDimension.height) / 2);
}
    private void butAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddActionPerformed
        // TODO add your handling code here:
        CPT_ICD_LINKDB cildb=new CPT_ICD_LINKDB();
        CPT_ICD_LINKDef cild =new CPT_ICD_LINKDef();
try{
        if(butAdd.getText().compareTo("Add")==0){
            int rc=tabICDLink.getRowCount();
            String icd1="";
            for(int s=0;s<rc;s++){
                icd1 = (String) tabICDLink.getValueAt(s,0);
                cild.setProcedureCode(procCode);
                cild.setDiagnosisCode(icd1);
                cildb.addCPT_ICD_LINK(cild);
            }
            JOptionPane.showMessageDialog(null, "Record saved :  Added ICD : "+icd1+" to CPT : "+procCode);
        }else{            
            for(int i=0;i<str.length;i++)
            {
                int count=0;
                for(int j=0;j<arr22.length;j++)
                {                    
                    if(str[i][0].compareTo(arr22[j][0])==0){
                        count++;
                        break;
                    }
               }
               if(count==0)
               {
                   cildb.deleteSelectedData(procCode , str[i][0]);
               }

            }       
        }
        tabICDLink.setModel(new javax.swing.table.DefaultTableModel(arr22,new String[]{""}
         )
                   {
                       boolean[] canEdit = new boolean [] {
                              false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
}catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_butAddActionPerformed

    private void butCPTSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCPTSearchActionPerformed
        // TODO add your handling code here:
        searchProcedureCodes();
}//GEN-LAST:event_butCPTSearchActionPerformed

    private void tabCPTSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCPTSMouseClicked
        // TODO add your handling code here:
        int rowCount=tabCPTS.getRowCount();
        int rowSel=tabCPTS.getSelectedRow();
        showProcedureDetails(rowCount,rowSel);
}//GEN-LAST:event_tabCPTSMouseClicked

    private void butCPTSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butCPTSearchKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
             searchProcedureCodes();
        }
}//GEN-LAST:event_butCPTSearchKeyPressed

    private void tabCPTSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabCPTSKeyPressed
        // TODO add your handling code here:
    try{
        int rowCount=tabCPTS.getRowCount();
        int curRow=tabCPTS.getSelectedRow();

        if(evt.getKeyCode()==evt.VK_DOWN){
            if(curRow==rowCount-1){
                    evt.setKeyCode(evt.VK_ENTER);
                    tabCPTS.setFocusable(true);
                    tabCPTS.requestFocus();
                    curRow=0;
            }else{
                    curRow=curRow+1;
            }
        }

        if(evt.getKeyCode()==evt.VK_UP){
            if(curRow!=0 && curRow<rowCount){
                curRow=curRow-1;
            }
        }

         if(curRow!=-1){
             showProcedureDetails(rowCount,curRow);
         }        
        
        if(curRow == (tabCPTS.getRowCount()-1) )
            txtCPTDes.requestFocus();
        
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_tabCPTSKeyPressed

    private void butICDSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butICDSearchActionPerformed
        // TODO add your handling code here:
        searchDiagnosisCodes();
        if(tabICDS.getRowCount()!=0){
                    tabICDS.changeSelection(0, 0, false, false);
                    tabICDS.setFocusable(true);
                    tabICDS.requestFocus();                  
        }
}//GEN-LAST:event_butICDSearchActionPerformed

    private void butICDSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butICDSearchKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            searchDiagnosisCodes();
        }
}//GEN-LAST:event_butICDSearchKeyPressed

    private void tabICDSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabICDSKeyPressed
        // TODO add your handling code here:
    try{
        int rowCount=tabICDS.getRowCount();
        int curRow=tabICDS.getSelectedRow();

        if(evt.getKeyCode()==evt.VK_DOWN){
            if(curRow==rowCount-1){
                    evt.setKeyCode(evt.VK_ENTER);
                    tabICDS.setFocusable(true);
                    tabICDS.requestFocus();
                    curRow=0;
            }else{
                    curRow=curRow+1;
            }
        }

        if(evt.getKeyCode()==evt.VK_UP){
            if(curRow!=0 && curRow<rowCount){
                curRow=curRow-1;
            }
        }

         if(curRow!=-1){
             showDiagnosisDetails(rowCount,curRow);
         }

         if(curRow == (tabICDS.getRowCount()-1) )
            butSend.requestFocus();
        
    }catch(Exception e){e.printStackTrace();}
}//GEN-LAST:event_tabICDSKeyPressed

    private void tabICDSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabICDSMouseClicked
        // TODO add your handling code here:
        butAdd.setText("Add");
        int rowCount=tabICDS.getRowCount();
        int rowSel=tabICDS.getSelectedRow();
        showDiagnosisDetails(rowCount,rowSel);
}//GEN-LAST:event_tabICDSMouseClicked

    private void butSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSendActionPerformed
        // TODO add your handling code here:
        shiftfromtab3totab4();
}//GEN-LAST:event_butSendActionPerformed

    private void tabICDLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabICDLinkMouseClicked
        // TODO add your handling code here:
        tabICDS.setRowSelectionAllowed(false);
        butAdd.setText("Update");
}//GEN-LAST:event_tabICDLinkMouseClicked

    private void butResendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butResendActionPerformed
        // TODO add your handling code here:
        shiftfromtab4totab3();
}//GEN-LAST:event_butResendActionPerformed

    private void butResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butResetActionPerformed
        // TODO add your handling code here:
        resetProcedureCode();
        resetDiagnosisCode();
        tabICDLink.setModel(new javax.swing.table.DefaultTableModel(null,new String[]{""}));
}//GEN-LAST:event_butResetActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:        
        if(evt.getKeyCode()==8 || evt.getKeyCode()==127){
            txtCPTDes.setText("");
            txtNotes.setText("");
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==8 || evt.getKeyCode()==127){
            txtICDSNotes.setText("");
            txtICDDes.setText("");
        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    try{
        if(this.getDefaultCloseOperation()==MDI.defaultWindowClose){
            MDI.cpticdLink=null;
        }
    }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_formWindowClosed

    private void butCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_butCloseActionPerformed

        private void shiftfromtab4totab3(){ 
        
        int i=tabICDLink.getSelectedRow();
        String icdjt4 = tabICDLink.getValueAt(i,0).toString();
        
            int q,q1;
            int j=arr22.length;
            String[][] arr123 = new String[j-1][1];
            for(q=0,q1=0;q<(j-1);)
            {
                if(arr22[q1][0].compareTo(icdjt4)!=0){
                    arr123[q][0]=arr22[q1][0];
                    q++;
                    q1++;
                }else{
                    q1++;
                }
            }
            arr22=arr123;
            arr12=arr22;
            tabICDLink.setModel(new javax.swing.table.DefaultTableModel(arr22,new String[]{""}
             )
                   {
                       boolean[] canEdit = new boolean [] {
                              false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
    }

    @SuppressWarnings("empty-statement")
    private void shiftfromtab3totab4(){
        int i=tabICDS.getSelectedRow();
        CPT_ICD_LINKDB cildb=new CPT_ICD_LINKDB();
    try{
        icd = tabICDS.getValueAt(i,0).toString();
         int k;
         //======= check whether icd exists for the cpt ========
         k=cildb.checkicd(procCode,icd);
        
        if(k==0){
            int q;
            int j=arr12.length;
            String[][] arr123 = new String[j+1][1];
            for(q=0;q<(j);q++)
            {
                arr123[q][0]=arr12[q][0];
            }

            arr123[q][0]=icd;
            arr12=arr123;
            str=arr12;
            arr22=arr12;
            tabICDLink.setModel(new javax.swing.table.DefaultTableModel(arr12,new String[]{""}
             )
                   {
                       boolean[] canEdit = new boolean [] {
                              false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );           
         }
    }catch(Exception e){e.printStackTrace();}
    }

    private void showDiagnosisDetails(int rowCount,int rowSel){

        if(tabICDS.getRowCount()!=0){
        String diagnosisCode=(String) tabICDS.getValueAt(rowSel,0);
        showDiagnosisCode(diagnosisCode);
        }else{txtICDCode.requestFocus();}       
    }

    public void showDiagnosisCode(String a){
    try{
        CPT_ICD_LINKDB cildb=new CPT_ICD_LINKDB();
        CPT_ICD_LINKDef cildef =new CPT_ICD_LINKDef();
        cildef=cildb.showSelectedRowDataicd(a);
        txtICDCode.setText(cildef.getDiagnosisCode());
        txtICDDes.setText(cildef.getDescription());
        txtICDSNotes.setText(cildef.getNotes());
    }catch(Exception e){e.printStackTrace();}
    }

    private void searchDiagnosisCodes(){
    try{
        CPT_ICD_LINKDB cildb=new CPT_ICD_LINKDB();
        CPT_ICD_LINKDef lstcild =new CPT_ICD_LINKDef();

        lstcild.setDiagnosisCode(txtICDCode.getText());
        lstcild.setDescription(txtICDDes.getText());

        tabICDS.setModel(new javax.swing.table.DefaultTableModel(cildb.searchDiagnosisCode(lstcild),new String[]{""}
         )
                   {
                       boolean[] canEdit = new boolean [] {
                              false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
        tabICDS.requestFocus();
        
    }catch(Exception e){e.printStackTrace();}
    }

    private void showProcedureDetails(int rowCount,int rowSel){
        if(tabCPTS.getRowCount()!=0){
        procCode=(String) tabCPTS.getValueAt(rowSel,0);
        showprocCode(procCode);
        }else{txtCPTCode.requestFocus();}
    }

    public void showprocCode(String a){
    try{
        CPT_ICD_LINKDB cildb=new CPT_ICD_LINKDB();
        CPT_ICD_LINKDef cildef =new CPT_ICD_LINKDef();
        cildef=cildb.showSelectedRowDatacpt(a);
        txtCPTCode.setText(cildef.getProcedureCode());
        txtCPT.setText(cildef.getProcedureCode());
        txtCPTDes.setText(cildef.getDescription());
        txtNotes.setText(cildef.getNotes());
        arr1 =cildb.showSelectedRowDatacpticdlink(a);
        str=arr12 = arr1;
        arr22=arr12;
        tabICDLink.setModel(new javax.swing.table.DefaultTableModel(cildb.showSelectedRowDatacpticdlink(a),new String[]{""}
         )
                   {
                       boolean[] canEdit = new boolean [] {
                              false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
        butAdd.setText("Add");
    }catch(Exception e){e.printStackTrace();}
    }

    private void searchProcedureCodes(){
    try{
        CPT_ICD_LINKDB cildb=new CPT_ICD_LINKDB();
        CPT_ICD_LINKDef lstcild =new CPT_ICD_LINKDef();
        lstcild.setProcedureCode(txtCPTCode.getText());
        lstcild.setDescription(txtCPTDes.getText());
        resetProcedureCode();

        tabCPTS.setModel(new javax.swing.table.DefaultTableModel(cildb.searchProcedureCode(lstcild),new String[]{"List of Procedure Codes"}

        )
                   {
                       boolean[] canEdit = new boolean [] {
                              false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );
        tabCPTS.requestFocus();
        if(tabCPTS.getRowCount()!=0){
        tabCPTS.setRowSelectionInterval(0,0);
        }
    }catch(Exception e){e.printStackTrace();}
    }
private void resetProcedureCode(){
    txtCPTCode.setText("");
    txtCPT.setText("");
    txtCPTDes.setText("");
    txtNotes.setText("");
}

private void resetDiagnosisCode(){
    txtICDCode.setText("");
    txtICDDes.setText("");
    txtICDSNotes.setText("");
}

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CPT_ICD_LINK().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton butAdd;
    public javax.swing.JButton butCPTSearch;
    public javax.swing.JButton butClose;
    public javax.swing.JButton butICDSearch;
    public javax.swing.JButton butResend;
    public javax.swing.JButton butReset;
    public javax.swing.JButton butSend;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JTable jTable1;
    public javax.swing.JTable tabCPTS;
    public javax.swing.JTable tabICDLink;
    public javax.swing.JTable tabICDS;
    public javax.swing.JTextField txtCPT;
    public javax.swing.JTextField txtCPTCode;
    public javax.swing.JTextField txtCPTDes;
    public javax.swing.JTextField txtICDCode;
    public javax.swing.JTextField txtICDDes;
    public javax.swing.JTextField txtICDSNotes;
    public javax.swing.JTextField txtNotes;
    // End of variables declaration//GEN-END:variables

}
