/* ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;
; Copyright  2009 Edgeware Technologies (India) Pvt Ltd ;
; ;
; This source code contains the intellectual property ;
; of its copyright holder(s), and is made available ;
; under a license. If you do not know the terms of ;
; the license, please stop and do not read further. ;
; ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*/

package com.etipl.pms;

import com.etipl.pms.datalayer.CityStateMethods;
import com.etipl.pms.entity.*;
import com.etipl.pms.datalayer.FacilityDB;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class Facility extends javax.swing.JFrame {
    JFrame frame=new JFrame();
    public static int save_flag=0;
    /** Creates new form Facility */

    public Facility() {
        initComponents();
        setVisible(true);
        screenDisplay();
        reset();
    }

    private void screenDisplay(){
    Dimension frameDimension = getSize();

		// position the topFrame
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if (frameDimension.height > screenSize.height)
        {
		frameDimension.height = screenSize.height;
        }

        if (frameDimension.width > screenSize.width)
        {
			frameDimension.width = screenSize.width;
        }
        setLocation((screenSize.width - frameDimension.width) / 2,
				(screenSize.height - frameDimension.height) / 2);
}
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tfCode = new javax.swing.JTextField();
        tfServiceName = new javax.swing.JTextField();
        tfAddress = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        tfState = new javax.swing.JTextField();
        tfNPI = new javax.swing.JTextField();
        tfFedTaxId = new javax.swing.JTextField();
        chbFacility = new javax.swing.JCheckBox();
        chbBilling = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTaxID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCLIA = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfPhone = new javax.swing.JFormattedTextField();
        tfFax = new javax.swing.JFormattedTextField();
        cmbCity = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAddDetails = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Facility");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Facility Service"));

        txtZipCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtZipCodeFocusLost(evt);
            }
        });
        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyTyped(evt);
            }
        });

        tfNPI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNPIKeyTyped(evt);
            }
        });

        chbFacility.setText("Service Facility");
        chbFacility.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbFacility.setMargin(new java.awt.Insets(0, 0, 0, 0));

        chbBilling.setText("Billing Facility");
        chbBilling.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chbBilling.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel1.setText("Code");

        jLabel2.setText("Service Name");

        jLabel3.setText("Address");

        jLabel4.setText("ZipCode");

        jLabel5.setText("City");

        jLabel6.setText("State");

        jLabel7.setText("NPI");

        jLabel8.setText("Phone");

        jLabel9.setText("Fax");

        jLabel10.setText("Federal Tax ID");

        jLabel11.setText("Taxonomy ID");

        jLabel12.setText("CLIA No");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("*");

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("*");

        try {
            tfPhone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###)###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfPhone.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        try {
            tfFax.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###)###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfFax.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfFax.setInheritsPopupMenu(true);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(301, Short.MAX_VALUE)
                .add(chbBilling)
                .add(29, 29, 29)
                .add(chbFacility)
                .add(101, 101, 101))
            .add(jPanel1Layout.createSequentialGroup()
                .add(62, 62, 62)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jLabel3)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jLabel1)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jLabel14, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(jLabel8))
                    .add(jLabel4)
                    .add(jLabel12))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(tfCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tfServiceName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(tfAddress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(tfPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel9)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(tfFax, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(14, 14, 14))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                        .add(txtZipCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel5)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(cmbCity, 0, 156, Short.MAX_VALUE))
                                    .add(txtCLIA, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(tfState, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel7))
                            .add(jLabel10)
                            .add(jLabel11))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(txtTaxID)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, tfFedTaxId)
                            .add(tfNPI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(67, 67, 67))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(chbFacility)
                            .add(chbBilling))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(tfCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2)
                            .add(jLabel13)
                            .add(tfServiceName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(15, 15, 15)
                        .add(tfAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtZipCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6)
                            .add(tfState, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7)
                            .add(tfNPI, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmbCity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(jLabel9)
                            .add(tfFedTaxId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(tfFax, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(4, 4, 4)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel11)
                            .add(txtTaxID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(36, 36, 36)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jLabel14))
                        .add(15, 15, 15)
                        .add(jLabel3)
                        .add(13, 13, 13)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel8)
                            .add(tfPhone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtCLIA, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel12))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Address Details"));

        tblAddDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Address", "Phone", "Fax", "Federal Tax ID", "NPI", "Services", "Taxonomy", "CLIA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAddDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAddDetailsMouseClicked(evt);
            }
        });
        tblAddDetails.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblAddDetailsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblAddDetails);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setMnemonic('a');
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setMnemonic('r');
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        jButton3.setMnemonic('d');
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        jButton4.setMnemonic('e');
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });

        jButton5.setMnemonic('c');
        jButton5.setText("Close");
        jButton5.setNextFocusableComponent(chbBilling);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(174, Short.MAX_VALUE)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton5)
                .add(107, 107, 107))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton5)
                    .add(jButton4)
                    .add(jButton2)
                    .add(jButton3)
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void delete(){
        FacilityDB obj = new  FacilityDB();
        int chk=1;
        
        chk=JOptionPane.showConfirmDialog(null,"Do U want to delete the user");
        if(chk==0){
            try {
                obj.removeFacility(tfCode.getText());
                JOptionPane.showMessageDialog(frame, "Record deleted successfully..");
                reset();
                filltblAddDetails();
                tfCode.setEditable(true);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
}
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
    delete();
    }//GEN-LAST:event_jButton3ActionPerformed


    private void showData(int rowCount,int rowSel){
        try{
            
        clearData();

        cmbCity.removeAllItems();
        tfCode.setEditable(false);
        String name=tblAddDetails.getValueAt(rowSel,0).toString();
        FacilityDef fdef_obj=new FacilityDef();
        FacilityDB fdb_obj=new FacilityDB();

                fdef_obj=fdb_obj.showFacility(name);

                tfCode.setText(fdef_obj.getcode());
                tfServiceName.setText(fdef_obj.getservicename());
                tfAddress.setText(fdef_obj.getaddress());
                txtZipCode.setText(fdef_obj.getzipcode());
                cityState();
                cmbCity.setSelectedItem(fdef_obj.getcity());
                tfState.setText(fdef_obj.getstate());
                tfNPI.setText(fdef_obj.getnpi());

                tfPhone.setText(fdef_obj.getphone());
                tfFax.setText(fdef_obj.getfax());
                tfFedTaxId.setText(fdef_obj.getfederaltaxid());
                this.txtTaxID.setText(fdef_obj.getTaxonomy());
                this.txtCLIA.setText(fdef_obj.getCLIA());

                if(fdef_obj.getservices().compareTo("A")==0)
                {
                    chbBilling.setSelected(true);
                    chbFacility.setSelected(true);
                }
                else if(fdef_obj.getservices().compareTo("S")==0)
                {
                    chbBilling.setSelected(false);
                    chbFacility.setSelected(true);
                }
                else if(fdef_obj.getservices().compareTo("B")==0)
                {
                    chbBilling.setSelected(true);
                    chbFacility.setSelected(false);
                }
                save_flag=1;
                jButton1.setText("Update");
                jButton3.setEnabled(true);

    }catch(Exception e){e.printStackTrace();}
    }
    private void tblAddDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAddDetailsMouseClicked
// TODO add your handling code here:
       int rowSel=tblAddDetails.getSelectedRow();
       int rowCount=tblAddDetails.getRowCount();
       showData(rowCount,rowSel);
    }//GEN-LAST:event_tblAddDetailsMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        filltblAddDetails();
        if(tblAddDetails.getRowCount()!=0){
                    tblAddDetails.changeSelection(0, 0, false, false);
                    tblAddDetails.setFocusable(true);
                    tblAddDetails.requestFocus();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void filltblAddDetails(){
        int flag=0;
        FacilityDef obj=new FacilityDef();

                obj.setcode(tfCode.getText());
                obj.setservicename(tfServiceName.getText());
                obj.setaddress(tfAddress.getText());
                obj.setzipcode(txtZipCode.getText());
                if(cmbCity.getSelectedIndex()!=-1){
                obj.setcity(cmbCity.getSelectedItem().toString());
                }else{
                    obj.setcity("");
                }
                obj.setstate(tfState.getText());
                obj.setnpi(tfNPI.getText());

                if(tfPhone.getText().compareTo("(   )   -    ")!=0){
                    obj.setphone(tfPhone.getText());
                }else{
                    obj.setphone("");
                }
                
                if(tfFax.getText().compareTo("(   )   -    ")!=0){
                    obj.setfax(tfFax.getText());
                }else{
                    obj.setfax("");
                }
                
                obj.setfederaltaxid(tfFedTaxId.getText());
                obj.setCLIA(this.txtCLIA.getText());
                obj.setTaxonomy(this.txtTaxID.getText());
                if((chbFacility.isSelected())&&(!chbBilling.isSelected())){
                    obj.setservices("S");
                    obj.setservices1("A");
                    flag=0;
                }
                if((!chbFacility.isSelected())&&(chbBilling.isSelected())){
                    obj.setservices("B");
                    obj.setservices1("A");
                    flag=0;
                }
                if((chbFacility.isSelected())&&(chbBilling.isSelected())){
                    flag=1;
                }
                if((!chbFacility.isSelected())&&(!chbBilling.isSelected())){
                    flag=1;
                }
                FacilityDB obj1=new FacilityDB();

                tblAddDetails.setModel(new javax.swing.table.DefaultTableModel(obj1.searchFaciltiy(obj,flag),new String[]{"Code","Name","Address","Phone","Fax","Federal Tax ID","NPI","Services","Taxonomy","CLIA"}
                )
                   {
                       boolean[] canEdit = new boolean [] {
                              false, false,false, false,false, false,false, false,false, false
                       };
                       public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                       }
                       }
                    );

                cityState();
    }

    private void saveUpdate() throws SQLException{

        FacilityDef obj=new FacilityDef();
        int res=0;

                        obj.setcode(tfCode.getText());
                        obj.setservicename(tfServiceName.getText());
                        obj.setaddress(tfAddress.getText());
                        obj.setzipcode(txtZipCode.getText());
                        
                        if(cmbCity.getSelectedIndex()!=-1){
                            obj.setcity(cmbCity.getSelectedItem().toString());
                        }else{
                            obj.setcity("");
                        }
                        
                        obj.setstate(tfState.getText());
                        obj.setnpi(tfNPI.getText());
                        obj.setphone(tfPhone.getText());
                        obj.setfax(tfFax.getText());
                        obj.setfederaltaxid(tfFedTaxId.getText());
                        obj.setTaxonomy(this.txtTaxID.getText());
                        obj.setCLIA(this.txtCLIA.getText());

                        if((chbFacility.isSelected())&&(!chbBilling.isSelected()))
                             obj.setservices("S");
                        if((!chbFacility.isSelected())&&(chbBilling.isSelected()))
                            obj.setservices("B");
                        if((chbFacility.isSelected())&&(chbBilling.isSelected()))
                            obj.setservices("A");

                FacilityDB objFacilityDB = new FacilityDB();
           if(save_flag==0)
           {
               System.out.println("tfCode.getText : "+ tfCode.getText().compareTo("") );
               System.out.println("tfServiceName.getText : "+ tfServiceName.getText().compareTo("") );

                   if((tfCode.getText().compareTo("")==0) || (tfServiceName.getText().compareTo("")==0))
                       JOptionPane.showMessageDialog(frame,"Code and Service Name type are compulsory");
                   else{
                        if((chbBilling.isSelected()==true || chbFacility.isSelected()==true))
                        {
                       res=objFacilityDB.checkDuplicateCode(tfCode.getText());
                       if(res==0){
                            objFacilityDB.addFacility(obj);
                            JOptionPane.showMessageDialog(frame,"Record Saved");
                            reset();
                            filltblAddDetails();
                       }else{
                            JOptionPane.showMessageDialog(frame,"Code already exists");
                       }
                    }else{JOptionPane.showMessageDialog(frame,"Select any of Billing and/or Service Facility");}
                 }
           }
           else if(save_flag==1)
           {
                    objFacilityDB.updateFacility(obj);
                    JOptionPane.showMessageDialog(frame,"Record Updated");
                    reset();
                    filltblAddDetails();
           }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
// TODO add your handling code here:
            saveUpdate();
            this.tfCode.requestFocus();
        } catch (SQLException ex) {ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
 private void clearData(){
 try{
                tfCode.setText("");
                tfServiceName.setText("");
                tfAddress.setText("");
                txtZipCode.setText("");
                cmbCity.setSelectedIndex(-1);
                tfState.setText("");
                tfNPI.setText("");
                this.tfPhone.setText("");
                this.tfFax.setText("");
                tfFedTaxId.setText("");
                this.txtCLIA.setText("");
                this.txtTaxID.setText("");
                chbFacility.setSelected(false);
                chbBilling.setSelected(false);

 }catch(Exception e){e.printStackTrace();}
 }
    private void reset(){
        save_flag=0;
        jButton1.setText("Save");
        jButton3.setEnabled(false);                
        clearData();
        tblAddDetails.setModel(new javax.swing.table.DefaultTableModel(null,new String[]{"Code","Name","Address","Phone","Fax","Federal Tax ID","NPI","Services","Taxonomy","CLIA"}));        
 }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        tfCode.setEditable(true);
        tfCode.requestFocus();
           reset();          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
        this.tfCode.requestFocus();
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        try {
            saveUpdate();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        tfCode.setEditable(true);
        reset();
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        filltblAddDetails();
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
        // TODO add your handling code here:
         this.dispose();
    }//GEN-LAST:event_jButton5KeyPressed
private void cityState(){
     try{
                List<CityState> lstCS=new ArrayList<CityState>();
                CityStateMethods csm = new CityStateMethods();
                lstCS=csm.loadCityState(txtZipCode.getText());
                if(lstCS!=null){
                    cmbCity.removeAllItems();
                    CityState cs =new CityState();
                    for(int i=0;i<lstCS.size();i++){
                        cs=lstCS.get(i);
                        cmbCity.addItem(cs.getCity());                        
                    }
                    tfState.setText(cs.getState());
                    cmbCity.setSelectedIndex(0);
                }else{
                    cmbCity.removeAllItems();
                    tfState.setText("");
                }
            }catch(Exception e){e.printStackTrace();}
        
}

    private void txtZipCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyPressed
        // TODO add your handling code here:
     if(evt.getKeyCode()==10){
           cityState();
     }
}//GEN-LAST:event_txtZipCodeKeyPressed

    private void txtZipCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyTyped
        // TODO add your handling code here:
        int ascii = (int) evt.getKeyChar();
        //evt.VK_F1
            if (ascii >=48 && ascii <=57 ) {
            }
            else
            {
                if (evt.getKeyChar()==evt.VK_BACK_SPACE)
                {
                }
                else
                {
                    evt.consume();
                }
            }
}//GEN-LAST:event_txtZipCodeKeyTyped

    private void tfNPIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNPIKeyTyped
        // TODO add your handling code here:
        int ascii = (int) evt.getKeyChar();
        if (ascii >=48 && ascii <=57 ) {

        } else {
            if (evt.getKeyChar()==evt.VK_BACK_SPACE) {

            } else {
                evt.consume();
            }

        }
}//GEN-LAST:event_tfNPIKeyTyped

    private void txtZipCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtZipCodeFocusLost
        // TODO add your handling code here:
        cityState();
    }//GEN-LAST:event_txtZipCodeFocusLost

    private void tblAddDetailsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAddDetailsKeyPressed
        // TODO add your handling code here:
         try{
        int rowCount=tblAddDetails.getRowCount();
        int curRow=tblAddDetails.getSelectedRow();

        if(evt.getKeyCode()==evt.VK_DOWN){
            if(curRow==rowCount-1){
                    evt.setKeyCode(evt.VK_ENTER);
                    tblAddDetails.setFocusable(true);
                    tblAddDetails.requestFocus();
                    curRow=0;
            }else{
                    curRow=curRow+1;
            }
        }
        if(evt.getKeyCode()==evt.VK_UP){
            if(curRow!=0 && curRow<rowCount){
                curRow=curRow-1;
            }
        }
         if(curRow!=-1){
              showData(rowCount,curRow);
         }

    }catch(Exception e){e.printStackTrace();}

    }//GEN-LAST:event_tblAddDetailsKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    try{
        if(this.getDefaultCloseOperation()==MDI.defaultWindowClose){
            MDI.serFacility=null;
        }
     }   catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_formWindowClosed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facility().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chbBilling;
    private javax.swing.JCheckBox chbFacility;
    private javax.swing.JComboBox cmbCity;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAddDetails;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfCode;
    private javax.swing.JFormattedTextField tfFax;
    private javax.swing.JTextField tfFedTaxId;
    private javax.swing.JTextField tfNPI;
    private javax.swing.JFormattedTextField tfPhone;
    private javax.swing.JTextField tfServiceName;
    private javax.swing.JTextField tfState;
    private javax.swing.JTextField txtCLIA;
    private javax.swing.JTextField txtTaxID;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
    
}
